//
//  form/Mesh.h
//  crag
//
//  Created by John on 10/24/09.
//  Copyright 2009, 2010 John McFarlane. All rights reserved.
//  This program is distributed under the terms of the GNU General Public License.
//

#pragma once

#include "MeshProperties.h"

#include "gfx/Mesh.h"
#include "gfx/LitVertex.h"

namespace form
{
	// forward-declaration
	class Point;
	
	// Stores a complete mesh of the formations.
	// Is generated by the NodeBuffer and then passed to a VertexBufferObject for rendering.
	class Mesh
	{
	public:
		// types
		typedef gfx::LitVertex Vertex;
		typedef gfx::LitMesh LitMesh;
		typedef Vertex::Color Color;
		
		// functions
		void Reserve(int max_num_verts, int max_num_tris);
		void Clear();
		
		MeshProperties & GetProperties();
		MeshProperties const & GetProperties() const;

		Vertex & GetVertex(Point & point, Color color);
	private:
		Vertex & AddVertex(Point const & p, Color color);
	public:
		
		void AddFace(Vertex & a, Vertex & b, Vertex & c, Vertex::Vector3 const & normal);
		void AddFace(Point & a, Point & b, Point & c, Vertex::Vector3 const & normal, gfx::Color4b color);

		LitMesh const & GetLitMesh() const;
		
		CRAG_VERIFY_INVARIANTS_DECLARE(Mesh);
		
		// variables
	private:
		LitMesh _lit_mesh;
		MeshProperties properties;
	};
	
}
